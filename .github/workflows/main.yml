name: CI-CD pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_test_linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows_ica2-2]
    # runs-on: linux-ica2
    
    name: Build and Test in linux

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
        env:
          VERBOSE: 1


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask matplotlib numpy  # Add this line to install additional dependencies
          pip install -r requirements.txt

      - name: Run Tests
        id: test
        run: |
          mkdir -p test-reports
          pytest test_app.py --junitxml=test-reports/test_results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-reports
          
  build_and_test_win:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [windows_ica2-2]
      # runs-on: linux-ica2
      
      name: Build and Test in win
  
      steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 
      - run: python my_script.py

  push_to_registry:
    needs: build_and_test_linux
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-ica2]
    name: Push Docker image to Docker Hub

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: pirabanjan/ica2

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy_to_ec2:
    needs: push_to_registry
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-ica2]
    name: Deploy to EC2 instance
  
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

  
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker pull pirabanjan/ica2:main
            docker run -d -p 80:5000 pirabanjan/ica2
